---
- name: Configure Kubernetes and Docker environment
  hosts: all
  become: yes
  tasks:
    # Install prerequisite packages
    - name: Install prerequisite packages
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: yes
        retries: 3
        delay: 10

    # Add Docker GPG key
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    # Add Docker repository
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        state: present

    # Install containerd
    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    # Set default containerd configuration
    - name: Configure containerd
      command: containerd config default | tee /etc/containerd/config.toml
      creates: /etc/containerd/config.toml

    # Enable and restart containerd service
    - name: Enable and restart containerd
      systemd:
        name: containerd
        enabled: yes
        state: restarted

    # Modify containerd configuration for systemd cgroup
    - name: Modify containerd config to use systemd cgroup
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: "^SystemdCgroup = false"
        line: "SystemdCgroup = true"

    # Install Kubernetes components
    - name: Install Kubernetes components (kubelet, kubeadm, kubectl)
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    # Hold Kubernetes packages to prevent auto-upgrades
    - name: Mark Kubernetes packages to hold
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: held

    # Load necessary kernel modules for containerd and Kubernetes
    - name: Ensure necessary kernel modules are loaded (overlay and br_netfilter)
      block:
        - name: Add containerd kernel module configuration
          copy:
            dest: /etc/modules-load.d/containerd.conf
            content: |
              overlay
              br_netfilter
          notify:
            - Load kernel modules

        - name: Load kernel modules (overlay and br_netfilter)
          command: modprobe "{{ item }}"
          loop:
            - overlay
            - br_netfilter

    # Apply sysctl settings for Kubernetes networking
    - name: Configure sysctl settings for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      notify:
        - Reload sysctl settings

  handlers:
    - name: Load kernel modules
      command: modprobe "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Reload sysctl settings
      command: sysctl --system
