---
- name: Harden Bastion Host
  hosts: bastion
  become: true
  vars:
    bastion_user: "bastion-user"
    # Bastion-specific kernel hardening
    sysctl_params:
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_syncookies: 1
      kernel.dmesg_restrict: 1
    sshd_config:
      Protocol: 2
      PermitRootLogin: "no"
      PasswordAuthentication: "no"
      ChallengeResponseAuthentication: "no"
      GSSAPIAuthentication: "no"
      UsePAM: "yes"
      X11Forwarding: "no"
      MaxAuthTries: 3
      LoginGraceTime: "60"
      ClientAliveInterval: "300"
      ClientAliveCountMax: "2"
      AllowAgentForwarding: "no"
      AllowTcpForwarding: "yes"
      PermitTunnel: "yes"
      PermitOpen: "{{ CLUSTER_ENDPOINT }}:6443"
      LogLevel: "VERBOSE"
    disabled_services:
      - rpcbind
      - nfs-common
      - rpc-statd
      - avahi-daemon
      - cups
      - isc-dhcp-server
      - isc-dhcp-client
    allowed_ports:
      - "22/tcp"
      - "6443/tcp"

  tasks:
    - name: Include OS hardening role
      include_role:
        name: devsec.hardening.os_hardening
      vars:
        os_hardening_remove_legacy_files: true
        os_hardening_enable_module_loading: false

    # Added bastion-specific kernel hardening
    - name: Apply bastion kernel parameters
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        reload: yes
      loop: "{{ sysctl_params | dict2items }}"
      notify: restart sshd

    - name: Configure SSHd
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^{{ item.key }} "
        line: "{{ item.key }} {{ item.value }}"
        state: present
      loop: >-
        {{ sshd_config | dict2items | combine({'AllowUsers': 'ubuntu ' + bastion_user}) }}
      notify: restart sshd
      when: is_packer_build | default(false)

    - name: Final SSH hardening
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^AllowUsers "
        line: "AllowUsers {{ bastion_user }}"
        state: present
      notify: restart sshd
      when: not (is_packer_build | default(false))

    - name: Remove temporary sudo access
      file:
        path: /etc/sudoers.d/90-bastion-init
        state: absent
      when: is_packer_build | default(false)

    - name: Disable unused services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop: "{{ disabled_services }}"

    - name: Configure host firewall
      ufw:
        rule: "{{ item.split('/')[1] | default('allow') }}"
        port: "{{ item.split('/')[0] }}"
        proto: "{{ item.split('/')[1] | default('tcp') }}"
      loop: "{{ allowed_ports }}"
      notify: enable ufw

    - name: Install audit tools
      apt:
        name: auditd
        state: present

    - name: Deploy audit rules
      copy:
        dest: /etc/audit/rules.d/99-bastion.rules
        content: |
          -a always,exit -F arch=b64 -S execve -k exec
          -w /etc/ssh/sshd_config -p wa -k sshd_config
          -w /var/log/auth.log -p wa -k authlog
          -w /etc/kubernetes/ -p wa -k k8s_config
      notify: restart auditd

    - name: Install session recording tools
      apt:
        name: tlog
        state: present

    - name: Configure session logging
      copy:
        dest: /etc/tlog/tlog-rec-session.conf
        content: |
          [rec]
          shell=/bin/bash
          user="{{ bastion_user }}"
          json-file=/var/log/tlog/tlog-session.log

    - name: Enable automatic security updates
      apt:
        name: unattended-upgrades
        state: present
      vars:
        unattended_upgrades_automatic_reboot: true
        unattended_upgrades_remove_unused_dependencies: true

    - name: Transfer Packer provisioning key
      ansible.posix.authorized_key:
        user: "{{ bastion_user }}"
        key: "{{ lookup('file', '/home/' + bastion_user + '/.ssh/authorized_keys') }}"
        state: present
      when:
        - ansible_user != bastion_user
        - is_packer_build | default(false)
      tags: packer

    - name: Enforce user account policies
      shell: |
        chage -E $(date -d "+90 days" +%Y-%m-%d) -m 1 -M 90 -W 14 "{{ bastion_user }}"
        faillock --user "{{ bastion_user }}" --reset
      changed_when: false

  handlers:
    - name: restart sshd
      systemd:
        name: ssh
        state: restarted

    - name: enable ufw
      command: ufw --force enable
      async: 30
      poll: 0

    - name: restart auditd
      systemd:
        name: auditd
        state: restarted
