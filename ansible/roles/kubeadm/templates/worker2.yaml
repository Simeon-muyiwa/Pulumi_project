---
- name: Configure Kubernetes Worker Nodes
  hosts: k8_workers
  become: yes
  serial: 1
  vars_files:
    - aws.config
  vars:
    k8s_version: "1.29.*"
    node_taints: []
    kubelet_config_path: /var/lib/kubelet/config.yaml
    cluster_endpoint: "{{ hostvars['k8_master'].ansible_host }}"

  tasks:
    # Phase 1: Pre-Join Validation
    - name: Verify master API connectivity
      wait_for:
        host: "{{ cluster_endpoint }}"
        port: 6443
        timeout: 60
      register: api_connect_result
      failed_when: false

    - name: Retrieve master CA hash
      command: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt |
        openssl rsa -pubin -outform der 2>/dev/null |
        openssl dgst -sha256 -hex
      register: ca_hash
      delegate_to: k8_master
      run_once: true
      changed_when: false

    - name: Set master_ca_hash fact
      set_fact:
        master_ca_hash: "{{ ca_hash.stdout | regex_replace('^.*= ','') }}"

    - name: Validate system CA trust
      command: |
        openssl s_client -connect {{ cluster_endpoint }}:6443 -CApath /etc/ssl/certs 2>/dev/null | 
        openssl verify -CApath /etc/ssl/certs
      register: ca_trust_check
      failed_when: ca_trust_check.rc != 0

    # Phase 2: Security Hardening
    - name: Configure kubelet security
      template:
        src: kubelet-config.yaml.j2
        dest: "{{ kubelet_config_path }}"
        mode: 0600
      notify: restart kubelet

    - name: Deploy cluster CA certificate
      copy:
        src: /etc/kubernetes/pki/ca.crt
        dest: /etc/kubernetes/pki/ca.crt
        remote_src: yes
        mode: 0644
      delegate_to: k8_master

    # Phase 3: Cluster Join
    - name: Generate join configuration
      template:
        src: join-config.yaml.j2
        dest: /etc/kubernetes/join-config.yaml
        mode: 0600
      vars:
        master_ca_hash: "{{ master_ca_hash }}" # Pass the fact to template

    - name: Join worker to cluster
      command: |
        kubeadm join \
          --config /etc/kubernetes/join-config.yaml \
          --node-name "{{ ansible_hostname }}" \
          --v=4
      environment:
        KUBELET_KUBECONFIG_ARGS: "--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
        KUBELET_CONFIG_ARGS: "--config={{ kubelet_config_path }}"
      register: join_result
      changed_when: "'This node has joined the cluster' in join_result.stdout"

    # Phase 4: Post-Join Configuration
    - name: Apply node labels
      command: |
        kubectl label node {{ ansible_hostname }} \
          topology.kubernetes.io/zone={{ ansible_ec2_placement_availability_zone }} \
          node.kubernetes.io/instance-type={{ ansible_ec2_instance_type }} \
          --kubeconfig /etc/kubernetes/kubelet.conf
      changed_when: false

    - name: Configure cloud provider
      template:
        src: cloud-provider.conf.j2
        dest: /etc/kubernetes/cloud-provider.conf
        mode: 0600
      vars:
        aws_region: "{{ AWS_REGION }}"
        cluster_id: "{{ CLUSTER_ID }}" # Added cluster_id variable
        vpc_id: "{{ VPC_ID }}" # New VPC_ID variable
      notify: restart kubelet

  handlers:
    - name: restart kubelet
      systemd:
        name: kubelet
        state: restarted
        daemon_reload: yes
