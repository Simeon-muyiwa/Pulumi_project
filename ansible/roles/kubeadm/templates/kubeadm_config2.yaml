---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: {{ kubectl_version | regex_replace('\\*$', '') }}
controlPlaneEndpoint: "{{ hostvars['k8s_master'].private_ip }}:6443"

apiServer:
  certSANs:
  - "{{ hostvars['k8s_master'].public_ip }}"
  - "{{ hostvars['k8s_master'].private_ip }}"
  - "oidc.{{domain}}"  
  - "{{ BASTION_PUBLIC_IP }}"
  extraArgs:    
    oidc-issuer-url: "{{ oidc_issuer_url }}"
    oidc-client-id: "{{ oidc_client_id }}" # For AWS IRSA
    oidc-username-claim: sub
    oidc-groups-claim: groups
networking:
  podSubnet: "{{ POD_NETWORK_CIDR }}"
  serviceSubnet: "{{ SERVICE_CIDR }}"
  dnsDomain: "cluster.local"
   
controllerManager:
  extraArgs:
     cloud-provider: external
     cluster-cidr: "{{ POD_NETWORK_CIDR }}"
    enable-admission-plugins: "NodeRestriction,PodSecurity"
    authorization-mode: "Node,RBAC"
    allocate-node-cidrs: "true"
    node-cidr-mask-size: "24"
    service-cluster-ip-range: "{{ SERVICE_CIDR }}"
scheduler:
  extraArgs: {}
etcd:
  local:
    dataDir: /var/lib/etcd
    extraArgs:
      listen-client-urls: "https://127.0.0.1:{{ etcd_client_port }},https://{{ ansible_default_ipv4.address }}:{{ etcd_client_port }}"
      advertise-client-urls: "https://{{ ansible_default_ipv4.address }}:{{ etcd_client_port }}"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  name: "{{ inventory_hostname }}"
  kubeletExtraArgs:
    cloud-provider: external
    cloud-config: /etc/kubernetes/cloud-provider.conf
    read-only-port: "0"
    event-qps: "0"
    protect-kernel-defaults: "true"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: systemd
failSwapOn: false
readOnlyPort: 0
serializeImagePulls: false
clusterDomain: "cluster.local"
