name: Pulumi CI/CD Workflow

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: main
        type: choice
        options:
          - main
          - develop
          - release/*

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm ci

      - name: Install Pulumi
        run: npm install -g @pulumi/pulumi

      - name: Install AWS provider
        run: npm install -g @pulumi/aws

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Install Packer
        run: |
          sudo apt-get update
          sudo apt-get install -y packer

      - name: Install Python 3
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

  packer-build-master-worker:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-Packer-K8S-cluster
      - name: Build Master/Worker AMI
        run: |
          packer build -force \
            -var 'aws_access_key_id=$AWS_ACCESS_KEY_ID' \
            -var 'aws_secret_access_key=$AWS_SECRET_ACCESS_KEY' \
            -var 'aws_region=$AWS_REGION' \
            common.kubeadm.json || { echo "Master/Worker AMI building failed"; exit 1; }

  bastion-packer-build:
    needs: [pulumi-deploy, packer-build-master-worker]
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-Bastion-Packer
      - name: Build Bastion AMI
        run: |
          packer build -force \
            -var 'aws_access_key_id=$AWS_ACCESS_KEY_ID' \
            -var 'aws_secret_access_key=$AWS_SECRET_ACCESS_KEY' \
            -var 'aws_region=$AWS_REGION' \
            bastion.json || { echo "Bastion AMI building failed"; exit 1; }

  pulumi-deploy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Deploy to EC2
        run: |
          pulumi up --yes || { echo "Deployment failed"; exit 1; }

  dynamic-inventory:
    needs: pulumi-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Generate Dynamic Inventory
        run: |
          python3 ${GITHUB_WORKSPACE}/dynamic_inventory.py \
            ${{ secrets.MASTER_TAG }} \
            ${{ secrets.WORKER_TAG }} \
            ${{ secrets.BASTION_PUBLIC_IP }} > ${GITHUB_WORKSPACE}/inventory.json
          cat inventory.json

  ansible-deploy:
    needs: [pulumi-deploy, dynamic-inventory]
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Deploy kubeadm cluster using Ansible
        run: |
          ansible-playbook -i inventory.json playbook.yml || { echo "Ansible deployment failed"; exit 1; }

  verify-pulumi-stack:
    needs: ansible-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-node@v3
      - name: Verify Pulumi Stack Output
        run: |
          pulumi show --stack ${{ secrets.PULUMI_STACK_NAME }} || { echo "Pulumi stack verification failed"; exit 1; }
